name: CI

on:
  push:
    branches:
      - "main"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 3: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 4: Detect changed directories in 'apps/' and 'shared-packages/'
      - name: Get changed directories
        id: changes
        run: |
          # Get a list of changed files
          CHANGED_FILES=$(git diff-tree --no-commit-id --name-only -r HEAD)

          # Initialize an empty list to hold affected services
          CHANGED_APPS=()

          # Loop through all subdirectories in 'apps/'
          for dir in apps/*/; do
            # Check if any files in this directory or in shared-packages have changed
            if echo "$CHANGED_FILES" | grep -qE "^${dir}|^shared-packages/"; then
              # Extract the directory name (e.g., backend-1-api)
              APP_NAME=$(basename "$dir")
              CHANGED_APPS+=("$APP_NAME")
            fi
          done

          # Output the list of changed apps
          if [ ${#CHANGED_APPS[@]} -gt 0 ]; then
            echo "changed_apps=${CHANGED_APPS[@]}" >> $GITHUB_ENV
          else
            echo "changed_apps=" >> $GITHUB_ENV
          fi

      # Step 5: Conditionally build and push Docker images based on the changes
      - name: Build and Push Docker Images
        if: env.changed_apps != ''
        uses: docker/build-push-action@v6
        with:
          push: true
          # Dynamically build and push images for the changed apps
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/$(echo "${{ env.changed_apps }}" | tr ' ' '\n' | sed 's/^/${{ secrets.DOCKERHUB_USERNAME }}\//g' | tr '\n' ',')
          context: .
          # Only build Dockerfiles for the changed apps
          file: ${{ env.changed_apps }}/*/Dockerfile
          build-args: |
            CHANGED_APPS=${{ env.changed_apps }}
          # Optional: Add cache to speed up builds
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/backend-1-api:latest
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/backend-1-api:cache,mode=max
